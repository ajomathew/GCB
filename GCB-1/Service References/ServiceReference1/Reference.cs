//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace GCB_1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServiceGCB")]
    public interface IServiceGCB {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceGCB/InsertOpe", ReplyAction="http://tempuri.org/IServiceGCB/InsertOpeResponse")]
        System.IAsyncResult BeginInsertOpe(string str, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertOpe(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceGCB/selectop", ReplyAction="http://tempuri.org/IServiceGCB/selectopResponse")]
        System.IAsyncResult Beginselectop(string str, string username, string password, System.AsyncCallback callback, object asyncState);
        
        bool Endselectop(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceGCB/IsAvail", ReplyAction="http://tempuri.org/IServiceGCB/IsAvailResponse")]
        System.IAsyncResult BeginIsAvail(string str, string value, System.AsyncCallback callback, object asyncState);
        
        bool EndIsAvail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceGCB/fill", ReplyAction="http://tempuri.org/IServiceGCB/fillResponse")]
        System.IAsyncResult Beginfill(string val, string user, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> Endfill(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceGCB/selectxml", ReplyAction="http://tempuri.org/IServiceGCB/selectxmlResponse")]
        System.IAsyncResult Beginselectxml(string value, string username, System.AsyncCallback callback, object asyncState);
        
        string Endselectxml(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceGCB/downloadfile", ReplyAction="http://tempuri.org/IServiceGCB/downloadfileResponse")]
        System.IAsyncResult Begindownloadfile(string value, System.AsyncCallback callback, object asyncState);
        
        byte[] Enddownloadfile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceGCB/downloadfileonload", ReplyAction="http://tempuri.org/IServiceGCB/downloadfileonloadResponse")]
        System.IAsyncResult Begindownloadfileonload(string value, System.AsyncCallback callback, object asyncState);
        
        byte[] Enddownloadfileonload(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceGCBChannel : GCB_1.ServiceReference1.IServiceGCB, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertOpeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertOpeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class selectopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public selectopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsAvailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsAvailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class fillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public fillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class selectxmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public selectxmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class downloadfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public downloadfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class downloadfileonloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public downloadfileonloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceGCBClient : System.ServiceModel.ClientBase<GCB_1.ServiceReference1.IServiceGCB>, GCB_1.ServiceReference1.IServiceGCB {
        
        private BeginOperationDelegate onBeginInsertOpeDelegate;
        
        private EndOperationDelegate onEndInsertOpeDelegate;
        
        private System.Threading.SendOrPostCallback onInsertOpeCompletedDelegate;
        
        private BeginOperationDelegate onBeginselectopDelegate;
        
        private EndOperationDelegate onEndselectopDelegate;
        
        private System.Threading.SendOrPostCallback onselectopCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsAvailDelegate;
        
        private EndOperationDelegate onEndIsAvailDelegate;
        
        private System.Threading.SendOrPostCallback onIsAvailCompletedDelegate;
        
        private BeginOperationDelegate onBeginfillDelegate;
        
        private EndOperationDelegate onEndfillDelegate;
        
        private System.Threading.SendOrPostCallback onfillCompletedDelegate;
        
        private BeginOperationDelegate onBeginselectxmlDelegate;
        
        private EndOperationDelegate onEndselectxmlDelegate;
        
        private System.Threading.SendOrPostCallback onselectxmlCompletedDelegate;
        
        private BeginOperationDelegate onBegindownloadfileDelegate;
        
        private EndOperationDelegate onEnddownloadfileDelegate;
        
        private System.Threading.SendOrPostCallback ondownloadfileCompletedDelegate;
        
        private BeginOperationDelegate onBegindownloadfileonloadDelegate;
        
        private EndOperationDelegate onEnddownloadfileonloadDelegate;
        
        private System.Threading.SendOrPostCallback ondownloadfileonloadCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceGCBClient() {
        }
        
        public ServiceGCBClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceGCBClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceGCBClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceGCBClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<InsertOpeCompletedEventArgs> InsertOpeCompleted;
        
        public event System.EventHandler<selectopCompletedEventArgs> selectopCompleted;
        
        public event System.EventHandler<IsAvailCompletedEventArgs> IsAvailCompleted;
        
        public event System.EventHandler<fillCompletedEventArgs> fillCompleted;
        
        public event System.EventHandler<selectxmlCompletedEventArgs> selectxmlCompleted;
        
        public event System.EventHandler<downloadfileCompletedEventArgs> downloadfileCompleted;
        
        public event System.EventHandler<downloadfileonloadCompletedEventArgs> downloadfileonloadCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GCB_1.ServiceReference1.IServiceGCB.BeginInsertOpe(string str, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertOpe(str, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GCB_1.ServiceReference1.IServiceGCB.EndInsertOpe(System.IAsyncResult result) {
            return base.Channel.EndInsertOpe(result);
        }
        
        private System.IAsyncResult OnBeginInsertOpe(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string str = ((string)(inValues[0]));
            return ((GCB_1.ServiceReference1.IServiceGCB)(this)).BeginInsertOpe(str, callback, asyncState);
        }
        
        private object[] OnEndInsertOpe(System.IAsyncResult result) {
            bool retVal = ((GCB_1.ServiceReference1.IServiceGCB)(this)).EndInsertOpe(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertOpeCompleted(object state) {
            if ((this.InsertOpeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertOpeCompleted(this, new InsertOpeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertOpeAsync(string str) {
            this.InsertOpeAsync(str, null);
        }
        
        public void InsertOpeAsync(string str, object userState) {
            if ((this.onBeginInsertOpeDelegate == null)) {
                this.onBeginInsertOpeDelegate = new BeginOperationDelegate(this.OnBeginInsertOpe);
            }
            if ((this.onEndInsertOpeDelegate == null)) {
                this.onEndInsertOpeDelegate = new EndOperationDelegate(this.OnEndInsertOpe);
            }
            if ((this.onInsertOpeCompletedDelegate == null)) {
                this.onInsertOpeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertOpeCompleted);
            }
            base.InvokeAsync(this.onBeginInsertOpeDelegate, new object[] {
                        str}, this.onEndInsertOpeDelegate, this.onInsertOpeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GCB_1.ServiceReference1.IServiceGCB.Beginselectop(string str, string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginselectop(str, username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GCB_1.ServiceReference1.IServiceGCB.Endselectop(System.IAsyncResult result) {
            return base.Channel.Endselectop(result);
        }
        
        private System.IAsyncResult OnBeginselectop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string str = ((string)(inValues[0]));
            string username = ((string)(inValues[1]));
            string password = ((string)(inValues[2]));
            return ((GCB_1.ServiceReference1.IServiceGCB)(this)).Beginselectop(str, username, password, callback, asyncState);
        }
        
        private object[] OnEndselectop(System.IAsyncResult result) {
            bool retVal = ((GCB_1.ServiceReference1.IServiceGCB)(this)).Endselectop(result);
            return new object[] {
                    retVal};
        }
        
        private void OnselectopCompleted(object state) {
            if ((this.selectopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.selectopCompleted(this, new selectopCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void selectopAsync(string str, string username, string password) {
            this.selectopAsync(str, username, password, null);
        }
        
        public void selectopAsync(string str, string username, string password, object userState) {
            if ((this.onBeginselectopDelegate == null)) {
                this.onBeginselectopDelegate = new BeginOperationDelegate(this.OnBeginselectop);
            }
            if ((this.onEndselectopDelegate == null)) {
                this.onEndselectopDelegate = new EndOperationDelegate(this.OnEndselectop);
            }
            if ((this.onselectopCompletedDelegate == null)) {
                this.onselectopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnselectopCompleted);
            }
            base.InvokeAsync(this.onBeginselectopDelegate, new object[] {
                        str,
                        username,
                        password}, this.onEndselectopDelegate, this.onselectopCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GCB_1.ServiceReference1.IServiceGCB.BeginIsAvail(string str, string value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsAvail(str, value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GCB_1.ServiceReference1.IServiceGCB.EndIsAvail(System.IAsyncResult result) {
            return base.Channel.EndIsAvail(result);
        }
        
        private System.IAsyncResult OnBeginIsAvail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string str = ((string)(inValues[0]));
            string value = ((string)(inValues[1]));
            return ((GCB_1.ServiceReference1.IServiceGCB)(this)).BeginIsAvail(str, value, callback, asyncState);
        }
        
        private object[] OnEndIsAvail(System.IAsyncResult result) {
            bool retVal = ((GCB_1.ServiceReference1.IServiceGCB)(this)).EndIsAvail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsAvailCompleted(object state) {
            if ((this.IsAvailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsAvailCompleted(this, new IsAvailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsAvailAsync(string str, string value) {
            this.IsAvailAsync(str, value, null);
        }
        
        public void IsAvailAsync(string str, string value, object userState) {
            if ((this.onBeginIsAvailDelegate == null)) {
                this.onBeginIsAvailDelegate = new BeginOperationDelegate(this.OnBeginIsAvail);
            }
            if ((this.onEndIsAvailDelegate == null)) {
                this.onEndIsAvailDelegate = new EndOperationDelegate(this.OnEndIsAvail);
            }
            if ((this.onIsAvailCompletedDelegate == null)) {
                this.onIsAvailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsAvailCompleted);
            }
            base.InvokeAsync(this.onBeginIsAvailDelegate, new object[] {
                        str,
                        value}, this.onEndIsAvailDelegate, this.onIsAvailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GCB_1.ServiceReference1.IServiceGCB.Beginfill(string val, string user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginfill(val, user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> GCB_1.ServiceReference1.IServiceGCB.Endfill(System.IAsyncResult result) {
            return base.Channel.Endfill(result);
        }
        
        private System.IAsyncResult OnBeginfill(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string val = ((string)(inValues[0]));
            string user = ((string)(inValues[1]));
            return ((GCB_1.ServiceReference1.IServiceGCB)(this)).Beginfill(val, user, callback, asyncState);
        }
        
        private object[] OnEndfill(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((GCB_1.ServiceReference1.IServiceGCB)(this)).Endfill(result);
            return new object[] {
                    retVal};
        }
        
        private void OnfillCompleted(object state) {
            if ((this.fillCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.fillCompleted(this, new fillCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void fillAsync(string val, string user) {
            this.fillAsync(val, user, null);
        }
        
        public void fillAsync(string val, string user, object userState) {
            if ((this.onBeginfillDelegate == null)) {
                this.onBeginfillDelegate = new BeginOperationDelegate(this.OnBeginfill);
            }
            if ((this.onEndfillDelegate == null)) {
                this.onEndfillDelegate = new EndOperationDelegate(this.OnEndfill);
            }
            if ((this.onfillCompletedDelegate == null)) {
                this.onfillCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnfillCompleted);
            }
            base.InvokeAsync(this.onBeginfillDelegate, new object[] {
                        val,
                        user}, this.onEndfillDelegate, this.onfillCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GCB_1.ServiceReference1.IServiceGCB.Beginselectxml(string value, string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginselectxml(value, username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GCB_1.ServiceReference1.IServiceGCB.Endselectxml(System.IAsyncResult result) {
            return base.Channel.Endselectxml(result);
        }
        
        private System.IAsyncResult OnBeginselectxml(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string value = ((string)(inValues[0]));
            string username = ((string)(inValues[1]));
            return ((GCB_1.ServiceReference1.IServiceGCB)(this)).Beginselectxml(value, username, callback, asyncState);
        }
        
        private object[] OnEndselectxml(System.IAsyncResult result) {
            string retVal = ((GCB_1.ServiceReference1.IServiceGCB)(this)).Endselectxml(result);
            return new object[] {
                    retVal};
        }
        
        private void OnselectxmlCompleted(object state) {
            if ((this.selectxmlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.selectxmlCompleted(this, new selectxmlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void selectxmlAsync(string value, string username) {
            this.selectxmlAsync(value, username, null);
        }
        
        public void selectxmlAsync(string value, string username, object userState) {
            if ((this.onBeginselectxmlDelegate == null)) {
                this.onBeginselectxmlDelegate = new BeginOperationDelegate(this.OnBeginselectxml);
            }
            if ((this.onEndselectxmlDelegate == null)) {
                this.onEndselectxmlDelegate = new EndOperationDelegate(this.OnEndselectxml);
            }
            if ((this.onselectxmlCompletedDelegate == null)) {
                this.onselectxmlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnselectxmlCompleted);
            }
            base.InvokeAsync(this.onBeginselectxmlDelegate, new object[] {
                        value,
                        username}, this.onEndselectxmlDelegate, this.onselectxmlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GCB_1.ServiceReference1.IServiceGCB.Begindownloadfile(string value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begindownloadfile(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] GCB_1.ServiceReference1.IServiceGCB.Enddownloadfile(System.IAsyncResult result) {
            return base.Channel.Enddownloadfile(result);
        }
        
        private System.IAsyncResult OnBegindownloadfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string value = ((string)(inValues[0]));
            return ((GCB_1.ServiceReference1.IServiceGCB)(this)).Begindownloadfile(value, callback, asyncState);
        }
        
        private object[] OnEnddownloadfile(System.IAsyncResult result) {
            byte[] retVal = ((GCB_1.ServiceReference1.IServiceGCB)(this)).Enddownloadfile(result);
            return new object[] {
                    retVal};
        }
        
        private void OndownloadfileCompleted(object state) {
            if ((this.downloadfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.downloadfileCompleted(this, new downloadfileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void downloadfileAsync(string value) {
            this.downloadfileAsync(value, null);
        }
        
        public void downloadfileAsync(string value, object userState) {
            if ((this.onBegindownloadfileDelegate == null)) {
                this.onBegindownloadfileDelegate = new BeginOperationDelegate(this.OnBegindownloadfile);
            }
            if ((this.onEnddownloadfileDelegate == null)) {
                this.onEnddownloadfileDelegate = new EndOperationDelegate(this.OnEnddownloadfile);
            }
            if ((this.ondownloadfileCompletedDelegate == null)) {
                this.ondownloadfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndownloadfileCompleted);
            }
            base.InvokeAsync(this.onBegindownloadfileDelegate, new object[] {
                        value}, this.onEnddownloadfileDelegate, this.ondownloadfileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GCB_1.ServiceReference1.IServiceGCB.Begindownloadfileonload(string value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begindownloadfileonload(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] GCB_1.ServiceReference1.IServiceGCB.Enddownloadfileonload(System.IAsyncResult result) {
            return base.Channel.Enddownloadfileonload(result);
        }
        
        private System.IAsyncResult OnBegindownloadfileonload(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string value = ((string)(inValues[0]));
            return ((GCB_1.ServiceReference1.IServiceGCB)(this)).Begindownloadfileonload(value, callback, asyncState);
        }
        
        private object[] OnEnddownloadfileonload(System.IAsyncResult result) {
            byte[] retVal = ((GCB_1.ServiceReference1.IServiceGCB)(this)).Enddownloadfileonload(result);
            return new object[] {
                    retVal};
        }
        
        private void OndownloadfileonloadCompleted(object state) {
            if ((this.downloadfileonloadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.downloadfileonloadCompleted(this, new downloadfileonloadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void downloadfileonloadAsync(string value) {
            this.downloadfileonloadAsync(value, null);
        }
        
        public void downloadfileonloadAsync(string value, object userState) {
            if ((this.onBegindownloadfileonloadDelegate == null)) {
                this.onBegindownloadfileonloadDelegate = new BeginOperationDelegate(this.OnBegindownloadfileonload);
            }
            if ((this.onEnddownloadfileonloadDelegate == null)) {
                this.onEnddownloadfileonloadDelegate = new EndOperationDelegate(this.OnEnddownloadfileonload);
            }
            if ((this.ondownloadfileonloadCompletedDelegate == null)) {
                this.ondownloadfileonloadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndownloadfileonloadCompleted);
            }
            base.InvokeAsync(this.onBegindownloadfileonloadDelegate, new object[] {
                        value}, this.onEnddownloadfileonloadDelegate, this.ondownloadfileonloadCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GCB_1.ServiceReference1.IServiceGCB CreateChannel() {
            return new ServiceGCBClientChannel(this);
        }
        
        private class ServiceGCBClientChannel : ChannelBase<GCB_1.ServiceReference1.IServiceGCB>, GCB_1.ServiceReference1.IServiceGCB {
            
            public ServiceGCBClientChannel(System.ServiceModel.ClientBase<GCB_1.ServiceReference1.IServiceGCB> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertOpe(string str, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = str;
                System.IAsyncResult _result = base.BeginInvoke("InsertOpe", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndInsertOpe(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("InsertOpe", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Beginselectop(string str, string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = str;
                _args[1] = username;
                _args[2] = password;
                System.IAsyncResult _result = base.BeginInvoke("selectop", _args, callback, asyncState);
                return _result;
            }
            
            public bool Endselectop(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("selectop", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsAvail(string str, string value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = str;
                _args[1] = value;
                System.IAsyncResult _result = base.BeginInvoke("IsAvail", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsAvail(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsAvail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Beginfill(string val, string user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = val;
                _args[1] = user;
                System.IAsyncResult _result = base.BeginInvoke("fill", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> Endfill(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("fill", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Beginselectxml(string value, string username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = value;
                _args[1] = username;
                System.IAsyncResult _result = base.BeginInvoke("selectxml", _args, callback, asyncState);
                return _result;
            }
            
            public string Endselectxml(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("selectxml", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Begindownloadfile(string value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("downloadfile", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] Enddownloadfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("downloadfile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Begindownloadfileonload(string value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("downloadfileonload", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] Enddownloadfileonload(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("downloadfileonload", _args, result)));
                return _result;
            }
        }
    }
}
